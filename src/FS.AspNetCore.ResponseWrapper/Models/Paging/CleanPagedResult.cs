namespace FS.AspNetCore.ResponseWrapper.Models.Paging;

/// <summary>
/// Represents a clean, metadata-free collection of items extracted from paginated results.
/// This class contains only the business data without any pagination-related properties,
/// providing a pure data structure for API responses where pagination metadata is handled separately.
/// </summary>
/// <typeparam name="T">The type of items contained in the collection.</typeparam>
/// <remarks>
/// This class is automatically generated by the ResponseWrapper system when it processes paginated results.
/// The transformation process extracts the business data (Items) from the original paginated object and
/// places it in this clean structure, while moving all pagination metadata to the response metadata section.
/// 
/// This separation of concerns creates cleaner API responses where business logic remains focused on
/// data while pagination concerns are handled consistently in the metadata section. The approach
/// eliminates the mixing of business data with pagination properties, resulting in more maintainable
/// and predictable API contracts.
/// </remarks>
public class CleanPagedResult<T>
{
    /// <summary>
    /// Gets or sets the collection of business items without any pagination metadata.
    /// This collection contains the pure business data that was extracted from the original
    /// paginated result, providing clean separation between data and pagination concerns.
    /// </summary>
    /// <value>
    /// A list containing only the business items for the current page, without any pagination
    /// properties or metadata. This enables clean, focused data structures in API responses.
    /// </value>
    public List<T> Items { get; set; } = [];
    
    // NO PAGE, NO PAGESIZE, NO TOTALPAGES, NO TOTALITEMS!
    // CLEAN SEPARATION ACHIEVED!
}